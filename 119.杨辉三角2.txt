效率不高！！！
class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> temp1;
        temp1.push_back(1);
        if(rowIndex==0)
        return temp1;
        for(int i=1;i<rowIndex+1;i++)
        {
           
            vector<int> temp2;
            temp2.push_back(1);
            for(int j=1;j<=i-1;j++)
            {
                temp2.push_back(temp1[j-1]+temp1[j]);
            }
            temp2.push_back(1);
            temp1=temp2;
        }
        return temp1;
    }
};
# 方法 4：使用公式
# 组合公式C(n,i) = n!/(i!*(n-i)!)
# 则第(i+1)项是第i项的倍数=(n-i)/(i+1)
class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> temp1;
        temp1.push_back(1);
        long num = 1;
        for(int i=0;i<rowIndex;i++)
        {
             num = num * (rowIndex - i) / (i + 1);
             temp1.push_back(num);
        }
       return temp1;
    }
};